""""""""""""""""""""""""""""""""""""""""""
"set encoding                            "
""""""""""""""""""""""""""""""""""""""""""
set encoding=utf8
""""""""""""""""""""""""""""""""""""""""""
"let vim different from vi               "
""""""""""""""""""""""""""""""""""""""""""
set nocompatible  
syntax enable
""""""""""""""""""""""""""""""""""""""""""
"set vundle                              "
""""""""""""""""""""""""""""""""""""""""""
call plug#begin()
" The default plugin directory will be as follows:
"   - Vim (Linux/macOS): '~/.vim/plugged'
"   - Vim (Windows): '~/vimfiles/plugged'
"   - Neovim (Linux/macOS/Windows): stdpath('data') . '/plugged'
" You can specify a custom plugin directory by passing it as the argument
"   - e.g. `call plug#begin('~/.vim/plugged')`
"   - Avoid using standard Vim directory names like 'plugin'

" Make sure you use single quotes

Plug 'tomasr/molokai'
Plug 'scrooloose/nerdcommenter'
Plug 'scrooloose/nerdtree'
Plug 'vim-syntastic/syntastic'
Plug 'godlygeek/tabular'
Plug 'majutsushi/tagbar'
Plug 'sirver/ultisnips'
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'octol/vim-cpp-enhanced-highlight'
Plug 'ryanoasis/vim-devicons'
Plug 'easymotion/vim-easymotion'
Plug 'tpope/vim-fugitive'
Plug 'airblade/vim-gitgutter'
Plug 'ludovicchabant/vim-gutentags'
Plug 'adelarsq/vim-matchit'
Plug 'tiagofumo/vim-nerdtree-syntax-highlight'
Plug 'jistr/vim-nerdtree-tabs'
Plug 'tpope/vim-repeat'
Plug 'honza/vim-snippets'
Plug 'tpope/vim-surround'
Plug 'lervag/vimtex'
Plug 'christoomey/vim-tmux-navigator'
Plug 'tpope/vim-unimpaired'
Plug 'mg979/vim-visual-multi', {'branch': 'master'}
Plug 'Valloric/YouCompleteMe'
Plug 'rhysd/conflict-marker.vim'
Plug 'ctrlpvim/ctrlp.vim'


" Initialize plugin system
" - Automatically executes `filetype plugin indent on` and `syntax enable`.
call plug#end()
" You can revert the settings after the call like so:
"   filetype indent off   " Disable file-type-specific indentation
"   syntax off            " Disable syntax highlighting

""""""""""""""""""""""""""""""""""""""""""
"set color                               "
""""""""""""""""""""""""""""""""""""""""""
set t_Co=256

set background=dark
colorscheme molokai
hi Normal ctermfg=white ctermbg=NONE
hi NonText ctermbg=NONE 
hi LineNr ctermbg=NONE 
hi FoldColumn ctermbg=NONE 
set cursorline
set cursorcolumn
set hlsearch
hi CursorLine ctermbg=236
hi CursorColumn ctermbg=236
hi Search cterm=reverse ctermbg=none ctermfg=none 

""""""""""""""""""""""""""""""""""""""""""
"set form                                "
""""""""""""""""""""""""""""""""""""""""""
set number
set relativenumber
set ruler
""""""""""""""""""""""""""""""""""""""""""
"for search                              "
""""""""""""""""""""""""""""""""""""""""""
set ignorecase
set smartcase
set incsearch
""""""""""""""""""""""""""""""""""""""""""
"for smart indent                        "
""""""""""""""""""""""""""""""""""""""""""
set cindent
""""""""""""""""""""""""""""""""""""""""""
"for tab                                 "
""""""""""""""""""""""""""""""""""""""""""
set expandtab
set tabstop=4
set softtabstop=4
set shiftwidth=4
set smarttab
autocmd FileType python setlocal tabstop=4
""""""""""""""""""""""""""""""""""""""""""
"for undo                                "
""""""""""""""""""""""""""""""""""""""""""
set undofile 
set undodir=~/.vim/undodir
""""""""""""""""""""""""""""""""""""""""""
"for spell check                         "
""""""""""""""""""""""""""""""""""""""""""
"set spell
set spelllang=en
set spellfile=~/Setting/en.utf-8.add
""""""""""""""""""""""""""""""""""""""""""
"for disable bell                        "
""""""""""""""""""""""""""""""""""""""""""
set noerrorbells visualbell t_vb=
""""""""""""""""""""""""""""""""""""""""""
"for wildmenu                            "
""""""""""""""""""""""""""""""""""""""""""
set wildmenu
set wildmode=longest:full,full
""""""""""""""""""""""""""""""""""""""""""
"other setting                           "
""""""""""""""""""""""""""""""""""""""""""
set confirm
set backspace=indent,eol,start

set history=500

set showcmd
set showmode
set wrap
set mouse=a
set clipboard=unnamedplus
set noeb
""""""""""""""""""""""""""""""""""""""""""
"search in visual mode                   "
""""""""""""""""""""""""""""""""""""""""""
vnoremap // y/\V<C-r>=escape(@",'/\')<CR><CR>
""""""""""""""""""""""""""""""""""""""""""
"Control c                               "
""""""""""""""""""""""""""""""""""""""""""
map <F4> : silent call SwitchFullSimpleMode()<CR>
map! <F4> <Esc>:call SwitchFullSimpleMode()<CR>
function SwitchFullSimpleMode()
	if (&mouse == "a")
    NERDTreeTabsClose
		let &mouse = ""
		set nocindent
		set nonumber norelativenumber
		set wrap
    set paste
		echo "Switch to simple mode.(nomouse, nonumber, nocindent, wrap, paste, NERDTreeTabsClose)"
	else
    "NERDTreeTabsOpen
		let &mouse = "a"
		set cindent
		set number relativenumber
		set wrap
    set nopaste
		echo "Switch to full mode.(mouse, number, cindent, wrap, nopaste)"
	endif
endfunction
""""""""""""""""""""""""""""""""""""""""""
"movement in line                        "
""""""""""""""""""""""""""""""""""""""""""
noremap k gk
noremap j gj
noremap gk k
noremap gj j
nnoremap <C-e> 3<C-e>
nnoremap <C-y> 3<C-y>
""""""""""""""""""""""""""""""""""""""""""
"widows navigation                       "
""""""""""""""""""""""""""""""""""""""""""
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-h> <C-w>h
nnoremap <C-l> <C-w>l
" maximize vertical direction window
nnoremap _ <C-w>_
" maximize horizontal direction window
nnoremap \| <C-w>\|
" equalize both horizontal vertical direction window
nnoremap = <C-w>=
" increase/ decrease vertical direction window
nnoremap + <C-W>+
nnoremap - <C-W>-
" increase/ decrease horizontal direction window
nnoremap ( <C-w><
nnoremap ) <C-w>>
set splitbelow
set splitright
""""""""""""""""""""""""""""""""""""""""""
" Tab control                            "
""""""""""""""""""""""""""""""""""""""""""
nnoremap <C-n> gt
nnoremap <C-p> gT
noremap <F5> :-tabmove<cr>
noremap <F6> :+tabmove<cr>
noremap <F9> : call CloseTab()<cr>
function CloseTab()
	if (tabpagenr("$") == 1)
    qa
	else
    tabclose
	endif
endfunction

autocmd BufEnter * call CheckLeftBuffers()
function! CheckLeftBuffers()
  let i = 1
  while i <= winnr('$')
    if getbufvar(winbufnr(i), '&buftype') == 'help' ||
        \ getbufvar(winbufnr(i), '&buftype') == 'quickfix' ||
        \ exists('t:NERDTreeBufName') &&
        \   bufname(winbufnr(i)) == t:NERDTreeBufName ||
        \ bufname(winbufnr(i)) == '__Tag_List__'
      let i += 1
    else
      break
    endif
  endwhile
  if i == winnr('$') + 1
    if tabpagenr('$') == 1
      qall
    else
      tabclose
    endif
  endif
  unlet i
endfunction
""""""""""""""""""""""""""""""""""""""""""
"set for foldmethod                      "
""""""""""""""""""""""""""""""""""""""""""
set foldmethod=indent
set foldnestmax=2
set foldcolumn=1
set foldignore=
nnoremap <space> za
""""""""""""""""""""""""""""""""""""""""""
"set for vimdiff                         "
""""""""""""""""""""""""""""""""""""""""""
command! Difft windo diffthis
command! Diffo windo diffoff
""""""""""""""""""""""""""""""""""""""""""
"set for toggle number                   "
""""""""""""""""""""""""""""""""""""""""""
function! NumberToggle()
  if(&relativenumber == 1)
    set norelativenumber
  else
    set relativenumber
  endif
endfunc
nnoremap <F3> :call NumberToggle()<cr>
